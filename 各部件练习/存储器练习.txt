----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:06:15 12/29/2018 
-- Design Name: 
-- Module Name:    SRAM - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity SRAM is
    Port ( clk : in  STD_LOGIC;
           rst : in  STD_LOGIC;
			  addr: out STD_LOGIC_VECTOR(17 downto 0);
			  data:inout STD_LOGIC_VECTOR(15 downto 0);
           sw : in  STD_LOGIC_VECTOR (15 downto 0);
			  RAM_EN : out STD_LOGIC;
			  RAM_OE : out STD_LOGIC;
			  RAM_RW : out STD_LOGIC;
           led : out  STD_LOGIC_VECTOR (15 downto 0));
end SRAM;

architecture Behavioral of SRAM is
signal status:STD_LOGIC_VECTOR(2 downto 0):="000";
begin
process(clk, rst)
variable count: integer range 0 to 100:= 0;
begin
	if(rst = '0')then
		addr <= "000000000000000000";
		data <= "0000000000000000";
	else
		if(clk'event and clk = '0')then
			if(status = "000")then 
				---sum := sum + 1;
				addr <= "00" & sw;
				led <= sw;
				RAM_EN <= '0';
				RAM_OE <= '1';
				RAM_RW <= '1';
				status <= "001";
			elsif(status = "001")then
				---sum := sum + 1;
				RAM_EN <= '0';
				RAM_OE <= '1';
				RAM_RW <= '1';
				data <= sw;
				led <= sw;
				status <= "010";
			elsif(status = "010")then
				led <= "0000000000000000";
				RAM_EN <= '0';
				RAM_OE <= '1';
				RAM_RW <= '0';
				status <= "011";
			elsif(status = "011")then
				RAM_EN <= '0';
				RAM_OE <= '1';
				RAM_RW <= '1';
				status <= "100";
			elsif(status = "100")then	
				RAM_OE <= '1';
				RAM_RW <= '1';
				data <= "ZZZZZZZZZZZZZZZZ";
				status <= "101";
			elsif(status = "101")then
				RAM_OE <= '0';
				RAM_RW <= '1';
				status <= "110";
			elsif(status = "110")then
				RAM_OE <= '0';
				RAM_RW <= '1';
				led <= data;
				status <= "000";
			end if;
			---if(sum = 20)then
			---	status <= "10"; 
			---end if;
		end if;
	end if;
end process;

end Behavioral;

